{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Close",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    close: true,\r\n    state: 'info',\r\n  },\r\n}"
            },
            {
                "name": "Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    outline: false,\n    color: 'danger',\n  },\n}"
            },
            {
                "name": "datepicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatepickerModule>",
                "defaultValue": "{\r\n  title: 'Forms/Datepicker',\r\n  component: DatepickerComponent,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    errorText: {\r\n      control: 'text',\r\n    },\r\n    helperText: {\r\n      control: 'text',\r\n    },\r\n    required: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [DatepickerComponent, HiddenDirective],\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        BaseInputModule,\r\n      ],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        {\r\n          provide: NG_VALUE_ACCESSOR,\r\n          useExisting: forwardRef(() => DatepickerComponent),\r\n          multi: true,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        form: new FormBuilder().group({\r\n          date: ['', [Validators.required]],\r\n        }),\r\n      },\r\n      template: `\r\n          <form style=\"height: 350px;\" [formGroup]=\"form\">\r\n              <ngx-datepicker\r\n                  formControlName=\"date\"\r\n                  [required]=\"required\"\r\n                  [label]=\"label\"\r\n                  [placeholder]=\"placeholder\"\r\n                  [errorText]=\"errorText\"\r\n                  [helperText]=\"helperText\"\r\n                  />\r\n              <br />\r\n              <br />\r\n              {{input}}   \r\n          </form>\r\n              `,\r\n    };\r\n  },\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
            },
            {
                "name": "input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputModule>",
                "defaultValue": "{\r\n  title: 'Forms/Input',\r\n  component: InputComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    errorText: {\r\n      control: 'text',\r\n    },\r\n    helperText: {\r\n      control: 'text',\r\n    },\r\n    required: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['text', 'email', 'number', 'phone'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [InputComponent],\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        BaseInputModule,\r\n      ],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        {\r\n          provide: NG_VALUE_ACCESSOR,\r\n          useExisting: forwardRef(() => InputComponent),\r\n          multi: true,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        form: new FormBuilder().group({\r\n          email: ['', [Validators.required, Validators.email]],\r\n        }),\r\n      },\r\n      template: `\r\n        <form [formGroup]=\"form\">\r\n            <ngx-input\r\n                formControlName=\"email\"\r\n                [required]=\"required\"\r\n                [label]=\"label\"\r\n                [placeholder]=\"placeholder\"\r\n                [type]=\"type\"\r\n                [errorText]=\"errorText\"\r\n                [helperText]=\"helperText\"\r\n                />\r\n            <br />\r\n            <br />\r\n            {{input}}   \r\n        </form>\r\n            `,\r\n    };\r\n  },\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
            },
            {
                "name": "input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectModule>",
                "defaultValue": "{\r\n  title: 'Forms/Select',\r\n  component: SelectComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    errorText: {\r\n      control: 'text',\r\n    },\r\n    helperText: {\r\n      control: 'text',\r\n    },\r\n    required: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['text', 'email', 'number', 'phone'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [SelectComponent, SelectItemComponent],\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        ScrollingModule,\r\n        BaseInputModule,\r\n        ButtonModule,\r\n        PlaceholderModule,\r\n        TagModule,\r\n      ],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        {\r\n          provide: NG_VALUE_ACCESSOR,\r\n          useExisting: forwardRef(() => SelectComponent),\r\n          multi: true,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        permissions: [\r\n          {\r\n            id: 1,\r\n            name: 'Admin',\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Comercial',\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Mesa de gestion',\r\n          },\r\n        ],\r\n        form: new FormBuilder().group({\r\n          select: ['', [Validators.required]],\r\n        }),\r\n      },\r\n      template: `\r\n        <form [formGroup]=\"form\">\r\n            <ngx-select\r\n            [options]=\"permissions\"\r\n            [closeOnSelect]=\"false\"\r\n            formControlName=\"select\"\r\n                [required]=\"required\"\r\n                [label]=\"label\"\r\n                [placeholder]=\"placeholder\"\r\n                [type]=\"type\"\r\n                [errorText]=\"errorText\"\r\n                [helperText]=\"helperText\"\r\n                labelKey=\"name\"\r\n      valueKey=\"id\"\r\n                />\r\n            <br />\r\n            <br />\r\n            {{input}}   \r\n        </form>\r\n            `,\r\n    };\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonModule>",
                "defaultValue": "{\n  title: 'Display/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    outline: {\n      control: 'boolean',\n    },\n    color: {\n      control: 'select',\n      options: ['primary', 'danger', 'success'],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    icon: {\n      control: 'text',\n    },\n  },\n  render: (args) => {\n    const { ...props } = args;\n    return {\n      props,\n      template: `<ngx-button [outline]=\"outline\" [color]=\"color\" [disabled]=\"disabled\" [icon]=\"icon\" [plain]=\"plain\">Click me!</ngx-button>`,\n    };\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    outline: true,\n    color: 'danger',\n  },\n}"
            },
            {
                "name": "Placeholder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Ingresa una fecha',\r\n    label: 'Fecha de nacimiento',\r\n    required: true,\r\n    errorText: 'Required field',\r\n  },\r\n}"
            },
            {
                "name": "Placeholder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Ingresa un email',\r\n    label: 'Email',\r\n    required: true,\r\n    disabled: false,\r\n    errorText: 'Correo invalido',\r\n    helperText: 'ingresa un correo existente',\r\n  },\r\n}"
            },
            {
                "name": "Placeholder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Ingresa un email',\r\n    label: 'Email',\r\n    required: true,\r\n    disabled: false,\r\n    errorText: 'Correo invalido',\r\n    helperText: 'ingresa un correo existente',\r\n  },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    outline: false,\n    disabled: false,\n    color: 'primary',\n    icon: 'people',\n    plain: false,\n  },\n}"
            },
            {
                "name": "Required",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    disabled: false,\r\n    required: true,\r\n  },\r\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    outline: false,\n    color: 'success',\n  },\n}"
            },
            {
                "name": "table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableModule>",
                "defaultValue": "{\r\n  title: 'Data/Table',\r\n  component: TableComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    currentPage: {\r\n      control: 'number',\r\n    },\r\n    limit: {\r\n      control: 'number',\r\n    },\r\n    total: {\r\n      control: 'number',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [TableComponent],\r\n      imports: [CommonModule, PaginationModule],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        permissions: [\r\n          {\r\n            id: 1,\r\n            name: 'Admin',\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Comercial',\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Mesa de gestion',\r\n          },\r\n        ],\r\n      },\r\n      template: `\r\n         <ngx-table\r\n            [currentPage]=\"1\"\r\n            [limit]=\"4\"\r\n            [total]=\"13\"\r\n            [options]=\"tableOptions\"\r\n            [data]=\"listPermission\"\r\n        >\r\n        </ngx-table>\r\n              `,\r\n    };\r\n  },\r\n}"
            },
            {
                "name": "tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LabelModule>",
                "defaultValue": "{\r\n  title: 'Display/Label',\r\n  component: LabelComponent,\r\n  tags: ['autodocs'],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n    return {\r\n      props,\r\n      template: `<ngx-label [required]=\"required\" [disabled]=\"disabled\">Texto de prueba</ngx-label>`,\r\n    };\r\n  },\r\n\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
            },
            {
                "name": "tag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TagModule>",
                "defaultValue": "{\r\n  title: 'Display/Tag',\r\n  component: TagComponent,\r\n  tags: ['autodocs'],\r\n\r\n  argTypes: {\r\n    close: {\r\n      control: 'boolean',\r\n    },\r\n    outline: {\r\n      control: 'boolean',\r\n    },\r\n    state: {\r\n      control: 'select',\r\n      options: ['primary', 'danger', 'success', 'info', 'warning', 'neutral'],\r\n    },\r\n  },\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n    return {\r\n      props,\r\n      template: `<ngx-tag [close]=\"close\" [state]=\"state\" [outline]=\"outline\">Texto de prueba</ngx-tag>`,\r\n    };\r\n  },\r\n\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
            },
            {
                "name": "tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipModule>",
                "defaultValue": "{\r\n  title: 'Display/Tooltip',\r\n  component: TooltipComponent,\r\n  tags: ['autodocs'],\r\n\r\n  argTypes: {\r\n    width: {\r\n      control: 'number',\r\n    },\r\n    position: {\r\n      control: 'select',\r\n      options: ['top', 'bottom', 'left', 'right'],\r\n    },\r\n  },\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n    return {\r\n      props,\r\n      template: `<div style=\"display: flex; justify-content: center; align-items: center; height: 300px\">\r\n        <ngx-tooltip [width]=\"width\" [position]=\"position\">\r\n          <p content class=\"text--sm\">ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD</p>\r\n          <span>texto de tooltip</span>\r\n        </ngx-tooltip>\r\n      </div>\r\n      `,\r\n    };\r\n  },\r\n\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
            },
            {
                "name": "Tooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    width: 124,\r\n  },\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ngx-relic/src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatepickerComponent>",
                "file": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/ngx-relic/src/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LabelComponent>",
                "file": "projects/ngx-relic/src/stories/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent<any, any>>",
                "file": "projects/ngx-relic/src/stories/select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TagComponent>",
                "file": "projects/ngx-relic/src/stories/tag.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipComponent>",
                "file": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-relic/src/stories/tag.stories.ts": [
                {
                    "name": "Close",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    close: true,\r\n    state: 'info',\r\n  },\r\n}"
                },
                {
                    "name": "tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TagModule>",
                    "defaultValue": "{\r\n  title: 'Display/Tag',\r\n  component: TagComponent,\r\n  tags: ['autodocs'],\r\n\r\n  argTypes: {\r\n    close: {\r\n      control: 'boolean',\r\n    },\r\n    outline: {\r\n      control: 'boolean',\r\n    },\r\n    state: {\r\n      control: 'select',\r\n      options: ['primary', 'danger', 'success', 'info', 'warning', 'neutral'],\r\n    },\r\n  },\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n    return {\r\n      props,\r\n      template: `<ngx-tag [close]=\"close\" [state]=\"state\" [outline]=\"outline\">Texto de prueba</ngx-tag>`,\r\n    };\r\n  },\r\n\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
                }
            ],
            "projects/ngx-relic/src/stories/button.stories.ts": [
                {
                    "name": "Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    outline: false,\n    color: 'danger',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonModule>",
                    "defaultValue": "{\n  title: 'Display/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    outline: {\n      control: 'boolean',\n    },\n    color: {\n      control: 'select',\n      options: ['primary', 'danger', 'success'],\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    icon: {\n      control: 'text',\n    },\n  },\n  render: (args) => {\n    const { ...props } = args;\n    return {\n      props,\n      template: `<ngx-button [outline]=\"outline\" [color]=\"color\" [disabled]=\"disabled\" [icon]=\"icon\" [plain]=\"plain\">Click me!</ngx-button>`,\n    };\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    outline: true,\n    color: 'danger',\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    outline: false,\n    disabled: false,\n    color: 'primary',\n    icon: 'people',\n    plain: false,\n  },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    outline: false,\n    color: 'success',\n  },\n}"
                }
            ],
            "projects/ngx-relic/src/stories/datepicker.stories.ts": [
                {
                    "name": "datepicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatepickerModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Datepicker',\r\n  component: DatepickerComponent,\r\n  tags: ['autodocs'],\r\n  parameters: {\r\n    layout: 'centered',\r\n  },\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    errorText: {\r\n      control: 'text',\r\n    },\r\n    helperText: {\r\n      control: 'text',\r\n    },\r\n    required: {\r\n      control: 'boolean',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [DatepickerComponent, HiddenDirective],\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        BaseInputModule,\r\n      ],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        {\r\n          provide: NG_VALUE_ACCESSOR,\r\n          useExisting: forwardRef(() => DatepickerComponent),\r\n          multi: true,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        form: new FormBuilder().group({\r\n          date: ['', [Validators.required]],\r\n        }),\r\n      },\r\n      template: `\r\n          <form style=\"height: 350px;\" [formGroup]=\"form\">\r\n              <ngx-datepicker\r\n                  formControlName=\"date\"\r\n                  [required]=\"required\"\r\n                  [label]=\"label\"\r\n                  [placeholder]=\"placeholder\"\r\n                  [errorText]=\"errorText\"\r\n                  [helperText]=\"helperText\"\r\n                  />\r\n              <br />\r\n              <br />\r\n              {{input}}   \r\n          </form>\r\n              `,\r\n    };\r\n  },\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
                },
                {
                    "name": "Placeholder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Ingresa una fecha',\r\n    label: 'Fecha de nacimiento',\r\n    required: true,\r\n    errorText: 'Required field',\r\n  },\r\n}"
                }
            ],
            "projects/ngx-relic/src/stories/input.stories.ts": [
                {
                    "name": "input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Input',\r\n  component: InputComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    errorText: {\r\n      control: 'text',\r\n    },\r\n    helperText: {\r\n      control: 'text',\r\n    },\r\n    required: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['text', 'email', 'number', 'phone'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [InputComponent],\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        BaseInputModule,\r\n      ],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        {\r\n          provide: NG_VALUE_ACCESSOR,\r\n          useExisting: forwardRef(() => InputComponent),\r\n          multi: true,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        form: new FormBuilder().group({\r\n          email: ['', [Validators.required, Validators.email]],\r\n        }),\r\n      },\r\n      template: `\r\n        <form [formGroup]=\"form\">\r\n            <ngx-input\r\n                formControlName=\"email\"\r\n                [required]=\"required\"\r\n                [label]=\"label\"\r\n                [placeholder]=\"placeholder\"\r\n                [type]=\"type\"\r\n                [errorText]=\"errorText\"\r\n                [helperText]=\"helperText\"\r\n                />\r\n            <br />\r\n            <br />\r\n            {{input}}   \r\n        </form>\r\n            `,\r\n    };\r\n  },\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
                },
                {
                    "name": "Placeholder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Ingresa un email',\r\n    label: 'Email',\r\n    required: true,\r\n    disabled: false,\r\n    errorText: 'Correo invalido',\r\n    helperText: 'ingresa un correo existente',\r\n  },\r\n}"
                }
            ],
            "projects/ngx-relic/src/stories/select.stories.ts": [
                {
                    "name": "input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectModule>",
                    "defaultValue": "{\r\n  title: 'Forms/Select',\r\n  component: SelectComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    placeholder: {\r\n      control: 'text',\r\n    },\r\n    label: {\r\n      control: 'text',\r\n    },\r\n    errorText: {\r\n      control: 'text',\r\n    },\r\n    helperText: {\r\n      control: 'text',\r\n    },\r\n    required: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    type: {\r\n      control: 'select',\r\n      options: ['text', 'email', 'number', 'phone'],\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [SelectComponent, SelectItemComponent],\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        ScrollingModule,\r\n        BaseInputModule,\r\n        ButtonModule,\r\n        PlaceholderModule,\r\n        TagModule,\r\n      ],\r\n      schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n      providers: [\r\n        {\r\n          provide: NG_VALUE_ACCESSOR,\r\n          useExisting: forwardRef(() => SelectComponent),\r\n          multi: true,\r\n        },\r\n      ],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        permissions: [\r\n          {\r\n            id: 1,\r\n            name: 'Admin',\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Comercial',\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Mesa de gestion',\r\n          },\r\n        ],\r\n        form: new FormBuilder().group({\r\n          select: ['', [Validators.required]],\r\n        }),\r\n      },\r\n      template: `\r\n        <form [formGroup]=\"form\">\r\n            <ngx-select\r\n            [options]=\"permissions\"\r\n            [closeOnSelect]=\"false\"\r\n            formControlName=\"select\"\r\n                [required]=\"required\"\r\n                [label]=\"label\"\r\n                [placeholder]=\"placeholder\"\r\n                [type]=\"type\"\r\n                [errorText]=\"errorText\"\r\n                [helperText]=\"helperText\"\r\n                labelKey=\"name\"\r\n      valueKey=\"id\"\r\n                />\r\n            <br />\r\n            <br />\r\n            {{input}}   \r\n        </form>\r\n            `,\r\n    };\r\n  },\r\n}"
                },
                {
                    "name": "Placeholder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: 'Ingresa un email',\r\n    label: 'Email',\r\n    required: true,\r\n    disabled: false,\r\n    errorText: 'Correo invalido',\r\n    helperText: 'ingresa un correo existente',\r\n  },\r\n}"
                }
            ],
            "projects/ngx-relic/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n\r\n  tags: ['autodocs'],\r\n}"
                }
            ],
            "projects/ngx-relic/src/stories/label.stories.ts": [
                {
                    "name": "Required",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    disabled: false,\r\n    required: true,\r\n  },\r\n}"
                },
                {
                    "name": "tag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LabelModule>",
                    "defaultValue": "{\r\n  title: 'Display/Label',\r\n  component: LabelComponent,\r\n  tags: ['autodocs'],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n    return {\r\n      props,\r\n      template: `<ngx-label [required]=\"required\" [disabled]=\"disabled\">Texto de prueba</ngx-label>`,\r\n    };\r\n  },\r\n\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
                }
            ],
            "projects/ngx-relic/src/stories/table.stories.ts": [
                {
                    "name": "table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableModule>",
                    "defaultValue": "{\r\n  title: 'Data/Table',\r\n  component: TableComponent,\r\n  tags: ['autodocs'],\r\n  argTypes: {\r\n    currentPage: {\r\n      control: 'number',\r\n    },\r\n    limit: {\r\n      control: 'number',\r\n    },\r\n    total: {\r\n      control: 'number',\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [TableComponent],\r\n      imports: [CommonModule, PaginationModule],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n\r\n    return {\r\n      props: {\r\n        ...props,\r\n        permissions: [\r\n          {\r\n            id: 1,\r\n            name: 'Admin',\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Comercial',\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Mesa de gestion',\r\n          },\r\n        ],\r\n      },\r\n      template: `\r\n         <ngx-table\r\n            [currentPage]=\"1\"\r\n            [limit]=\"4\"\r\n            [total]=\"13\"\r\n            [options]=\"tableOptions\"\r\n            [data]=\"listPermission\"\r\n        >\r\n        </ngx-table>\r\n              `,\r\n    };\r\n  },\r\n}"
                }
            ],
            "projects/ngx-relic/src/stories/tooltip.stories.ts": [
                {
                    "name": "tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipModule>",
                    "defaultValue": "{\r\n  title: 'Display/Tooltip',\r\n  component: TooltipComponent,\r\n  tags: ['autodocs'],\r\n\r\n  argTypes: {\r\n    width: {\r\n      control: 'number',\r\n    },\r\n    position: {\r\n      control: 'select',\r\n      options: ['top', 'bottom', 'left', 'right'],\r\n    },\r\n  },\r\n  render: (args) => {\r\n    const { ...props } = args;\r\n    return {\r\n      props,\r\n      template: `<div style=\"display: flex; justify-content: center; align-items: center; height: 300px\">\r\n        <ngx-tooltip [width]=\"width\" [position]=\"position\">\r\n          <p content class=\"text--sm\">ABCDABCDABCDABCDABCDABCDABCDABCDABCDABCDABCD</p>\r\n          <span>texto de tooltip</span>\r\n        </ngx-tooltip>\r\n      </div>\r\n      `,\r\n    };\r\n  },\r\n\r\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\r\n}"
                },
                {
                    "name": "Tooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    width: 124,\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ngx-relic/src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ngx-relic/src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-relic/src/stories/datepicker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatepickerComponent>",
                    "file": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-relic/src/stories/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/ngx-relic/src/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-relic/src/stories/label.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LabelComponent>",
                    "file": "projects/ngx-relic/src/stories/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-relic/src/stories/select.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent<any, any>>",
                    "file": "projects/ngx-relic/src/stories/select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-relic/src/stories/tag.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TagComponent>",
                    "file": "projects/ngx-relic/src/stories/tag.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-relic/src/stories/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipComponent>",
                    "file": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-relic/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datepicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Placeholder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Placeholder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Required",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Placeholder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Close",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/tag.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-relic/src/stories/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}